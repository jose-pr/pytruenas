from pytruenas import Namespace as _NS
from pytruenas.models import jsonschema as _jsonschema
import typing as _ty

{%- set typeddicts = {} -%}

{%- for qn in ns.namespaces() %}
from {{ qn.module.removeprefix(ns.module) if ns.module else '.' + qn.module }} import {{ qn.classname }}
{%- endfor %} 
class {{ ns.classname }}(_NS):
    {% for qn in ns.methods() %}
    def {{ qn.methodname }}(self,
        {%- for param in qn.parameters() %}
        {{param.argument_declaration(typeddicts)}}, 
        {%- endfor %}
    ) -> {{ qn.returns().type_def(typeddicts) }}:
        """{{ qn.doc }}"""
        ...
    {%- endfor %} 
    {%- for qn in ns.namespaces() %}
    {{ qn.methodname }}: {{ qn.classname }}
    {%- endfor %} 


{%- for name, properties in typeddicts.items() %}
{{ name }} = _ty.TypedDict('{{ name }}', {
{%- for prop, typedef in properties.items() %}
    '{{ prop }}': {{typedef}},
{%- endfor %} 
})
{%- endfor %}